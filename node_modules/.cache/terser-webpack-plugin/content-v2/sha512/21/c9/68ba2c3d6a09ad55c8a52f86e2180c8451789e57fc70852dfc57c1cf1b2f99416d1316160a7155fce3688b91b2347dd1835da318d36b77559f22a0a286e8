{"map":"{\"version\":3,\"sources\":[\"/Users/ilaplace/workspace/gatsby-lambda/src/pages/page-2.js\",\"/Users/ilaplace/workspace/gatsby-lambda/.cache/public-page-renderer.js\",\"/Users/ilaplace/workspace/gatsby-lambda/.cache/gatsby-browser-entry.js\",\"/Users/ilaplace/workspace/gatsby-lambda/.cache/public-page-renderer-prod.js\",\"/Users/ilaplace/workspace/gatsby-lambda/src/components/seo.js\",\"/Users/ilaplace/workspace/gatsby-lambda/src/components/header.js\",\"/Users/ilaplace/workspace/gatsby-lambda/src/components/layout.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"react__WEBPACK_IMPORTED_MODULE_0__\",\"react__WEBPACK_IMPORTED_MODULE_0___default\",\"n\",\"gatsby__WEBPACK_IMPORTED_MODULE_1__\",\"_components_layout__WEBPACK_IMPORTED_MODULE_2__\",\"_components_seo__WEBPACK_IMPORTED_MODULE_3__\",\"SecondPage\",\"a\",\"createElement\",\"title\",\"to\",\"m\",\"module\",\"exports\",\"require\",\"default\",\"gatsby_link__WEBPACK_IMPORTED_MODULE_1__\",\"gatsby_link__WEBPACK_IMPORTED_MODULE_1___default\",\"d\",\"loader\",\"enqueue\",\"React\",\"createContext\",\"ProdPageRenderer\",\"_ref\",\"location\",\"pageResources\",\"InternalPageRenderer\",\"Object\",\"assign\",\"json\",\"SEO\",\"description\",\"lang\",\"meta\",\"site\",\"_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__\",\"data\",\"metaDescription\",\"siteMetadata\",\"react__WEBPACK_IMPORTED_MODULE_1___default\",\"react_helmet__WEBPACK_IMPORTED_MODULE_2___default\",\"htmlAttributes\",\"titleTemplate\",\"name\",\"content\",\"property\",\"author\",\"concat\",\"defaultProps\",\"Header\",\"siteTitle\",\"react_default\",\"style\",\"background\",\"marginBottom\",\"margin\",\"maxWidth\",\"padding\",\"gatsby_browser_entry\",\"color\",\"textDecoration\",\"Layout\",\"children\",\"_856328897\",\"Fragment\",\"header\",\"paddingTop\",\"Date\",\"getFullYear\",\"href\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\"\\nimport { Link } from \\\"gatsby\\\"\\n\\nimport Layout from \\\"../components/layout\\\"\\nimport SEO from \\\"../components/seo\\\"\\n\\nconst SecondPage = () => (\\n  <Layout>\\n    <SEO title=\\\"Page two\\\" />\\n    <h1>Hi from the second page</h1>\\n    <p>Welcome to page 2</p>\\n    <Link to=\\\"/\\\">Go back to the homepage</Link>\\n  </Layout>\\n)\\n\\nexport default SecondPage\\n\",\"const preferDefault = m => (m && m.default) || m\\n\\nif (process.env.BUILD_STAGE === `develop`) {\\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\\n} else {\\n  module.exports = () => null\\n}\\n\",\"import React from \\\"react\\\"\\nimport PropTypes from \\\"prop-types\\\"\\nimport Link, {\\n  withPrefix,\\n  withAssetPrefix,\\n  navigate,\\n  push,\\n  replace,\\n  navigateTo,\\n  parsePath,\\n} from \\\"gatsby-link\\\"\\nimport PageRenderer from \\\"./public-page-renderer\\\"\\nimport loader from \\\"./loader\\\"\\n\\nconst prefetchPathname = loader.enqueue\\n\\nconst StaticQueryContext = React.createContext({})\\n\\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\\n  const finalData = data\\n    ? data.data\\n    : staticQueryData[query] && staticQueryData[query].data\\n\\n  return (\\n    <React.Fragment>\\n      {finalData && render(finalData)}\\n      {!finalData && <div>Loading (StaticQuery)</div>}\\n    </React.Fragment>\\n  )\\n}\\n\\nconst StaticQuery = props => {\\n  const { data, query, render, children } = props\\n\\n  return (\\n    <StaticQueryContext.Consumer>\\n      {staticQueryData => (\\n        <StaticQueryDataRenderer\\n          data={data}\\n          query={query}\\n          render={render || children}\\n          staticQueryData={staticQueryData}\\n        />\\n      )}\\n    </StaticQueryContext.Consumer>\\n  )\\n}\\n\\nconst useStaticQuery = query => {\\n  if (\\n    typeof React.useContext !== `function` &&\\n    process.env.NODE_ENV === `development`\\n  ) {\\n    throw new Error(\\n      `You're likely using a version of React that doesn't support Hooks\\\\n` +\\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\\n    )\\n  }\\n  const context = React.useContext(StaticQueryContext)\\n  if (context[query] && context[query].data) {\\n    return context[query].data\\n  } else {\\n    throw new Error(\\n      `The result of this StaticQuery could not be fetched.\\\\n\\\\n` +\\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\\n    )\\n  }\\n}\\n\\nStaticQuery.propTypes = {\\n  data: PropTypes.object,\\n  query: PropTypes.string.isRequired,\\n  render: PropTypes.func,\\n  children: PropTypes.func,\\n}\\n\\nfunction graphql() {\\n  throw new Error(\\n    `It appears like Gatsby is misconfigured. Gatsby related \\\\`graphql\\\\` calls ` +\\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\\\n\\\\n` +\\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\\n  )\\n}\\n\\nexport {\\n  Link,\\n  withAssetPrefix,\\n  withPrefix,\\n  graphql,\\n  parsePath,\\n  navigate,\\n  push, // TODO replace for v3\\n  replace, // TODO remove replace for v3\\n  navigateTo, // TODO: remove navigateTo for v3\\n  StaticQueryContext,\\n  StaticQuery,\\n  PageRenderer,\\n  useStaticQuery,\\n  prefetchPathname,\\n}\\n\",\"import React from \\\"react\\\"\\nimport PropTypes from \\\"prop-types\\\"\\n\\nimport InternalPageRenderer from \\\"./page-renderer\\\"\\n\\nconst ProdPageRenderer = ({ location, pageResources }) => {\\n  if (!pageResources) {\\n    return null\\n  }\\n  return React.createElement(InternalPageRenderer, {\\n    location,\\n    pageResources,\\n    ...pageResources.json,\\n  })\\n}\\n\\nProdPageRenderer.propTypes = {\\n  location: PropTypes.shape({\\n    pathname: PropTypes.string.isRequired,\\n  }).isRequired,\\n}\\n\\nexport default ProdPageRenderer\\n\",\"/**\\n * SEO component that queries for data with\\n *  Gatsby's useStaticQuery React hook\\n *\\n * See: https://www.gatsbyjs.org/docs/use-static-query/\\n */\\n\\nimport React from \\\"react\\\"\\nimport PropTypes from \\\"prop-types\\\"\\nimport Helmet from \\\"react-helmet\\\"\\nimport { useStaticQuery, graphql } from \\\"gatsby\\\"\\n\\nfunction SEO({ description, lang, meta, title }) {\\n  const { site } = useStaticQuery(\\n    graphql`\\n      query {\\n        site {\\n          siteMetadata {\\n            title\\n            description\\n            author\\n          }\\n        }\\n      }\\n    `\\n  )\\n\\n  const metaDescription = description || site.siteMetadata.description\\n\\n  return (\\n    <Helmet\\n      htmlAttributes={{\\n        lang,\\n      }}\\n      title={title}\\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\\n      meta={[\\n        {\\n          name: `description`,\\n          content: metaDescription,\\n        },\\n        {\\n          property: `og:title`,\\n          content: title,\\n        },\\n        {\\n          property: `og:description`,\\n          content: metaDescription,\\n        },\\n        {\\n          property: `og:type`,\\n          content: `website`,\\n        },\\n        {\\n          name: `twitter:card`,\\n          content: `summary`,\\n        },\\n        {\\n          name: `twitter:creator`,\\n          content: site.siteMetadata.author,\\n        },\\n        {\\n          name: `twitter:title`,\\n          content: title,\\n        },\\n        {\\n          name: `twitter:description`,\\n          content: metaDescription,\\n        },\\n      ].concat(meta)}\\n    />\\n  )\\n}\\n\\nSEO.defaultProps = {\\n  lang: `en`,\\n  meta: [],\\n  description: ``,\\n}\\n\\nSEO.propTypes = {\\n  description: PropTypes.string,\\n  lang: PropTypes.string,\\n  meta: PropTypes.arrayOf(PropTypes.object),\\n  title: PropTypes.string.isRequired,\\n}\\n\\nexport default SEO\\n\",\"import { Link } from \\\"gatsby\\\"\\nimport PropTypes from \\\"prop-types\\\"\\nimport React from \\\"react\\\"\\n\\nconst Header = ({ siteTitle }) => (\\n  <header\\n    style={{\\n      background: `rebeccapurple`,\\n      marginBottom: `1.45rem`,\\n    }}\\n  >\\n    <div\\n      style={{\\n        margin: `0 auto`,\\n        maxWidth: 960,\\n        padding: `1.45rem 1.0875rem`,\\n      }}\\n    >\\n      <h1 style={{ margin: 0 }}>\\n        <Link\\n          to=\\\"/\\\"\\n          style={{\\n            color: `white`,\\n            textDecoration: `none`,\\n          }}\\n        >\\n          {siteTitle}\\n        </Link>\\n      </h1>\\n    </div>\\n  </header>\\n)\\n\\nHeader.propTypes = {\\n  siteTitle: PropTypes.string,\\n}\\n\\nHeader.defaultProps = {\\n  siteTitle: ``,\\n}\\n\\nexport default Header\\n\",\"/**\\n * Layout component that queries for data\\n * with Gatsby's useStaticQuery component\\n *\\n * See: https://www.gatsbyjs.org/docs/use-static-query/\\n */\\n\\nimport React from \\\"react\\\"\\nimport PropTypes from \\\"prop-types\\\"\\nimport { useStaticQuery, graphql } from \\\"gatsby\\\"\\n\\nimport Header from \\\"./header\\\"\\nimport \\\"./layout.css\\\"\\n\\nconst Layout = ({ children }) => {\\n  const data = useStaticQuery(graphql`\\n    query SiteTitleQuery {\\n      site {\\n        siteMetadata {\\n          title\\n        }\\n      }\\n    }\\n  `)\\n\\n  return (\\n    <>\\n      <Header siteTitle={data.site.siteMetadata.title} />\\n      <div\\n        style={{\\n          margin: `0 auto`,\\n          maxWidth: 960,\\n          padding: `0px 1.0875rem 1.45rem`,\\n          paddingTop: 0,\\n        }}\\n      >\\n        <main>{children}</main>\\n        <footer>\\n          © {new Date().getFullYear()}, Built with\\n          {` `}\\n          <a href=\\\"https://www.gatsbyjs.org\\\">Gatsby</a>\\n        </footer>\\n      </div>\\n    </>\\n  )\\n}\\n\\nLayout.propTypes = {\\n  children: PropTypes.node.isRequired,\\n}\\n\\nexport default Layout\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{198:function(t,e,a){\"use strict\";a.r(e);var n=a(0),r=a.n(n),i=a(201),o=a(206),c=a(204);e.default=function(){return r.a.createElement(o.a,null,r.a.createElement(c.a,{title:\"Page two\"}),r.a.createElement(\"h1\",null,\"Hi from the second page\"),r.a.createElement(\"p\",null,\"Welcome to page 2\"),r.a.createElement(i.a,{to:\"/\"},\"Go back to the homepage\"))}},200:function(t,e,a){var n;t.exports=(n=a(203))&&n.default||n},201:function(t,e,a){\"use strict\";var n=a(0),r=a.n(n),i=a(65),o=a.n(i);a.d(e,\"a\",function(){return o.a});a(200),a(9).default.enqueue,r.a.createContext({})},202:function(t){t.exports={data:{site:{siteMetadata:{title:\"Gatsby Default Starter\"}}}}},203:function(t,e,a){\"use strict\";a.r(e);a(23);var n=a(0),r=a.n(n),i=a(91);e.default=function(t){var e=t.location,a=t.pageResources;return a?r.a.createElement(i.a,Object.assign({location:e,pageResources:a},a.json)):null}},204:function(t,e,a){\"use strict\";var n=a(205),r=a(0),i=a.n(r),o=a(208),c=a.n(o);function l(t){var e=t.description,a=t.lang,r=t.meta,o=t.title,l=n.data.site,s=e||l.siteMetadata.description;return i.a.createElement(c.a,{htmlAttributes:{lang:a},title:o,titleTemplate:\"%s | \"+l.siteMetadata.title,meta:[{name:\"description\",content:s},{property:\"og:title\",content:o},{property:\"og:description\",content:s},{property:\"og:type\",content:\"website\"},{name:\"twitter:card\",content:\"summary\"},{name:\"twitter:creator\",content:l.siteMetadata.author},{name:\"twitter:title\",content:o},{name:\"twitter:description\",content:s}].concat(r)})}l.defaultProps={lang:\"en\",meta:[],description:\"\"},e.a=l},205:function(t){t.exports={data:{site:{siteMetadata:{title:\"Gatsby Default Starter\",description:\"Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.\",author:\"@gatsbyjs\"}}}}},206:function(t,e,a){\"use strict\";var n=a(202),r=a(0),i=a.n(r),o=a(201),c=function(t){var e=t.siteTitle;return i.a.createElement(\"header\",{style:{background:\"rebeccapurple\",marginBottom:\"1.45rem\"}},i.a.createElement(\"div\",{style:{margin:\"0 auto\",maxWidth:960,padding:\"1.45rem 1.0875rem\"}},i.a.createElement(\"h1\",{style:{margin:0}},i.a.createElement(o.a,{to:\"/\",style:{color:\"white\",textDecoration:\"none\"}},e))))};c.defaultProps={siteTitle:\"\"};var l=c;a(207),e.a=function(t){var e=t.children,a=n.data;return i.a.createElement(i.a.Fragment,null,i.a.createElement(l,{siteTitle:a.site.siteMetadata.title}),i.a.createElement(\"div\",{style:{margin:\"0 auto\",maxWidth:960,padding:\"0px 1.0875rem 1.45rem\",paddingTop:0}},i.a.createElement(\"main\",null,e),i.a.createElement(\"footer\",null,\"© \",(new Date).getFullYear(),\", Built with\",\" \",i.a.createElement(\"a\",{href:\"https://www.gatsbyjs.org\"},\"Gatsby\"))))}}}]);","extractedComments":[]}